# MySQL配置项
spring.datasource.url=jdbc:mysql://[MYSQL_IP]:3306/dev_springboot
spring.datasource.username=[USERNAME]
spring.datasource.password=[PASSWORD]
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.tomcat.max-idle=10
spring.datasource.tomcat.max-wait=10000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.min-idle=5
spring.datasource.tomcat.initial-size=5
# 设置默认的隔离级别为读写提交
# -1 使用数据库默认隔离级别
# 1 读未提交
# 2 读提交
# 3 可重复读
# 4 串行化
spring.datasource.tomcat.default-transaction-isolation=2

# MyBatis配置项
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=cn.zyt.springbootlearning.domain
mybatis.type-handlers-package=cn.zyt.springbootlearning.typehandler
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=30
# mybatis配置文件目录，如果使用如下配置文件，则不能在使用上面的configuration配置，需要将上面的配置移至mybatis-config.xml文件中
# mybatis.config-location=classpath:properties/mybatis-config.xml

# 日志配置
#logging.level.root=DEBUG
#logging.level.org.springframework=DEBUG
#logging.level.org.org.mybatis=DEBUG

# JSP配置
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

# Static Resource-Filter Configuration Information
spring.mvc.static-path-pattern=/static/**
spring.resources.static-locations=classpath:/static/

# 日期格式
spring.mvc.date-format=yyyy-MM-dd

# 文件上传配置
spring.servlet.multipart.location=/Users/yitian/Documents/IDEAWorkspaces/LocalProjects/springboot-learning/upload
spring.servlet.multipart.max-file-size=5242880
spring.servlet.multipart.max-request-size=20MB

# Spring MVC国际化配置
# 设置文件编码
spring.messages.encoding=UTF-8
# 国际化文件基础名称
spring.messages.basename=properties/international
# 国际化消息缓存有效时间（单位为秒），超时将重新载入
spring.messages.cache-duration=3600

# spring boot http监测配置
# 配置默认暴露的端点，*表示所有端点，也可以设置端点名称（info,health,beans等）
management.endpoints.web.exposure.include=*
# 配置不暴露的端点（env）
management.endpoints.web.exposure.exclude=env
# 默认不开启端点，
management.endpoints.enabled-by-default=false
# 下面配置需要开启的端点
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true
management.endpoint.mappings.enabled=true
management.endpoint.beans.enabled=true
# 启动shutdown端点
management.endpoint.shutdown.enabled=true
# 开启自定义数据库检查端点
management.endpoint.dbcheck.enabled=true
# 签名认证后展示，never：不展示，always：每次都展示
management.endpoint.health.show-details=when_authorized
# 关闭db健康指标
#management.health.db.enabled=false

# Spring Boot整合Redis
# 配置连接池属性
spring.redis.jedis.pool.min-idle=5
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=10
spring.redis.jedis.pool.max-wait=2000
# 配置Redis服务器属性
spring.redis.port=6379
spring.redis.host=172.16.226.128
# 在Redis没开启密码AUTH时无需设置
#spring.redis.password=123456
# Redis连接超时时间（毫秒）
spring.redis.timeout=1000

# Spring Redis Cache
# 设置缓存类型，这里使用Redis作为缓存服务器
spring.cache.type=REDIS
# 定义cache名称，用于在缓存注解中引用，多个名称可以使用逗号分隔
spring.cache.cache-names=redisCache
# 允许保存空值
spring.cache.redis.cache-null-values=true
# 自定义缓存前缀
#spring.cache.redis.key-prefix=
# 是否使用前缀
spring.cache.redis.use-key-prefix=true
# 设置缓存失效时间，0或者默认为永远不失效
spring.cache.redis.time-to-live=600000

# 自定义的一些属性
#database.drivername=com.mysql.jdbc.Driver
#database.url=jdbc:mysql://localhost:3306/springboot_dev
#database.username=root
#database.password=123456